plugins {
    id 'java'
    id 'maven'
    id "org.springframework.boot" version "2.1.2.RELEASE"
}

apply plugin: 'io.spring.dependency-management'

repositories {
    mavenLocal()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter:2.0.5.RELEASE'
    compile 'pl.pragmatists:JUnitParams:1.1.0'
    compile 'org.mockito:mockito-core:1.10.19'
    runtime 'org.springframework.boot:spring-boot-devtools:2.0.5.RELEASE'
    testCompile 'org.springframework.boot:spring-boot-starter-test:2.0.5.RELEASE'
    testCompile 'org.powermock:powermock-module-junit4:1.7.0'
    testCompile 'org.powermock:powermock-api-mockito:1.7.0'
    testCompile group: 'org.hamcrest', name: 'java-hamcrest', version: '2.0.0.0'
}

group = 'co.com.devco'
version = '0.0.1-SNAPSHOT'
description = 'devco'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Configuración para pruebas de integración
sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test